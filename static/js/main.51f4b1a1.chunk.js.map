{"version":3,"sources":["santa.svg","Santa.js","LookupForm.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Santa","message","className","src","santa","alt","Math","random","LookupForm","props","state","submitting","dotdotdot","undefined","onSubmit","bind","doDotDotDot","event","preventDefault","username","document","getElementById","value","trim","this","setMessage","setState","fetch","response","json","data","curState","newLength","length","setTimeout","repeat","placeholder","id","type","onClick","disabled","Component","Footer","style","color","href","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+SAAe,MAA0B,kCCa1BA,G,MAVD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEf,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,YAAYC,IAAKC,EAAOC,IAAI,UAC3C,qBAAwCH,UAAU,iCAAlD,SAAoFD,GAApF,oBAAuBK,KAAKC,gB,4DCuEnBC,G,wDAzEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,YAAY,EACZC,UAAW,KACXX,aAASY,GAGX,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVF,E,8FAaJE,G,8EACbA,EAAMC,sBAGWL,KAFXM,EAAWC,SAASC,eAAe,QAAQC,QAEN,OAAbH,GAAyC,KAApBA,EAASI,O,uBAC1DC,KAAKf,MAAMgB,WACT,sD,iCAKJD,KAAKE,SAAS,CAAEf,YAAY,IAC5Ba,KAAKR,c,mBAIoBW,MAAM,GAAD,OAhCnB,8DAgCmB,kBAAoBR,I,eAA1CS,E,iBACaA,EAASC,O,QAAtBC,E,OACNN,KAAKf,MAAMgB,WAAWK,EAAK7B,S,kDAE3BuB,KAAKf,MAAMgB,WAAW,gD,QAExBD,KAAKE,SAAS,CAAEf,YAAY,I,qJAGf,IAAD,OACZa,KAAKE,UAAS,SAACK,GACb,IAAIC,EAAYD,EAASnB,UAAUqB,OAAS,EAE5C,OADIF,EAASpB,YAAYuB,WAAW,EAAKlB,YAAa,KAC/C,CAAEJ,UAAW,IAAIuB,OAAOH,EAAY,S,+BAK7C,OACE,qBAAK9B,UAAU,aAAf,SACGsB,KAAKd,MAAMT,QACV,wBAEA,uBAAMC,UAAU,kBAAhB,UACE,uBACEkC,YAAY,0BACZlC,UAAU,mBACVmC,GAAG,SAEL,wBACEC,KAAK,SACLpC,UAAU,oBACVqC,QAASf,KAAKV,SACd0B,SAAUhB,KAAKd,MAAMC,WAJvB,SAMGa,KAAKd,MAAMC,WAAaa,KAAKd,MAAME,UAAY,oB,GAjErC6B,cCGVC,G,MANA,WACb,OACE,sBAAKxC,UAAU,SAAf,uBAAkC,sBAAMyC,MAAO,CAACC,MAAO,WAArB,0BAAlC,QAAiF,mBAAGC,KAAK,gCAAR,6B,MCetEC,MAbf,WAAgB,IAAD,EACiBC,mBAC5B,0DAFW,mBACN9C,EADM,KACGwB,EADH,KAIb,OACE,sBAAKvB,UAAU,MAAf,UACE,cAAC,EAAD,CAAOD,QAASA,IAChB,cAAC,EAAD,CAAYwB,WAAYA,IACxB,cAAC,EAAD,QCFSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.51f4b1a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/santa.e7bfb936.svg\";","import santa from './santa.svg'\nimport './Santa.css'\n\nconst Santa = ({ message }) => {\n\n  return (\n    <div className='Santa'>\n      <img className='Santa-img' src={santa} alt='santa' />\n      <div key={`{message} ${Math.random()}`} className='Santa-speechbubble new-message'>{message}</div>\n    </div>\n  )\n}\n\nexport default Santa\n","import './LookupForm.css'\nimport React, { Component } from 'react'\n\nconst apiUrl = 'https://pen-swap-secret-santa.us-e2.cloudhub.io/secretsanta'\n\nclass LookupForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      submitting: false,\n      dotdotdot: '..',\n      message: undefined,\n    }\n\n    this.onSubmit = this.onSubmit.bind(this)\n    this.doDotDotDot = this.doDotDotDot.bind(this)\n  }\n\n  async onSubmit(event) {\n    event.preventDefault()\n    const username = document.getElementById('name').value\n\n    if (username === undefined || username === null || username.trim() === '') {\n      this.props.setMessage(\n        'Hey now! You need to type in your reddit username!'\n      )\n      return\n    }\n\n    this.setState({ submitting: true })\n    this.doDotDotDot()\n\n    \n    try {\n      const response = await fetch(`${apiUrl}?giver=${username}`)\n      const data = await response.json()\n      this.props.setMessage(data.message)\n    } catch(error) {\n      this.props.setMessage('Ruh-roh! An error occured! Contact the mods?')\n    }\n    this.setState({ submitting: false })\n  }\n\n  doDotDotDot() {\n    this.setState((curState) => {\n      let newLength = curState.dotdotdot.length % 3\n      if (curState.submitting) setTimeout(this.doDotDotDot, 100)\n      return { dotdotdot: '.'.repeat(newLength + 1) }\n    })\n  }\n\n  render() {\n    return (\n      <div className='LookupForm'>\n        {this.state.message ? (\n          <div></div>\n        ) : (\n          <form className='LookupForm-form'>\n            <input\n              placeholder='Enter Reddit username..'\n              className='LookupForm-input'\n              id='name'\n            />\n            <button\n              type='submit'\n              className='LookupForm-button'\n              onClick={this.onSubmit}\n              disabled={this.state.submitting}\n            >\n              {this.state.submitting ? this.state.dotdotdot : 'Lookup'}\n            </button>\n          </form>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default LookupForm\n","import './Footer.css'\n\nconst Footer = () => {\n  return (\n    <div className=\"Footer\">Made with <span style={{color: '#e25555'}}>❤️</span> for <a href=\"https://reddit.com/r/pen_swap\">r/pen_swap</a></div>\n  )\n}\n\nexport default Footer","import { useState } from 'react'\nimport Santa from './Santa'\nimport LookupForm from './LookupForm'\nimport Footer from './Footer'\nimport './App.css'\n\nfunction App() {\n  const [message, setMessage] = useState(\n    \"Enter your Reddit username and I'll pm you your match!\"\n  )\n  return (\n    <div className='App'>\n      <Santa message={message} />\n      <LookupForm setMessage={setMessage} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}